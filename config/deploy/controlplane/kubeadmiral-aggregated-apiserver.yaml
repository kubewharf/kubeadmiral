apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeadmiral-aggregated-apiserver
  namespace: kubeadmiral-system
  labels:
    app: kubeadmiral-aggregated-apiserver
    apiserver: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubeadmiral-aggregated-apiserver
      apiserver: "true"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kubeadmiral-aggregated-apiserver
        apiserver: "true"
    spec:
      automountServiceAccountToken: false
      containers:
        - command:
            - /kubeadmiral-aggregated-apiserver
            - --bind-address=0.0.0.0
            - --client-ca-file=/etc/kubeadmiral/pki/ca.crt
            - --requestheader-allowed-names=front-proxy-client
            - --requestheader-client-ca-file=/etc/kubeadmiral/pki/front-proxy-ca.crt
            - --requestheader-extra-headers-prefix=X-Remote-Extra-
            - --requestheader-group-headers=X-Remote-Group
            - --requestheader-username-headers=X-Remote-User
            - --tls-cert-file=/etc/kubeadmiral/pki/apiserver.crt
            - --tls-private-key-file=/etc/kubeadmiral/pki/apiserver.key
            - --kubeconfig=/etc/kubeconfig
            - --authentication-kubeconfig=/etc/kubeconfig
            - --authorization-kubeconfig=/etc/kubeconfig
            - --kube-api-burst=100
            - --kube-api-qps=50
            - --feature-gates=APIPriorityAndFairness=false
            - --klog-v=4
          name: kubeadmiral-aggregated-apiserver
          image: ghcr.io/kubewharf/kubeadmiral-aggregated-apiserver:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /livez
              port: 443
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 443
              scheme: HTTPS
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 15
          resources:
            requests:
              cpu: 250m
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/kubeadmiral/pki
              name: kubeadmiral-certs
              readOnly: true
            - mountPath: /etc/kubeconfig
              subPath: kubeconfig
              name: kubeconfig
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      tolerations:
        - effect: NoExecute
          operator: Exists
      volumes:
        - name: kubeadmiral-certs
          secret:
            secretName: kubeadmiral-cert-secret
        - name: kubeconfig
          secret:
            secretName: kubeconfig
---
apiVersion: v1
kind: Service
metadata:
  name: kubeadmiral-aggregated-apiserver
  namespace: kubeadmiral-system
  labels:
    app: kubeadmiral-aggregated-apiserver
    apiserver: "true"
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 443
  selector:
    app: kubeadmiral-aggregated-apiserver

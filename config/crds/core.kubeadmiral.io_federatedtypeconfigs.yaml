---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: federatedtypeconfigs.core.kubeadmiral.io
spec:
  group: core.kubeadmiral.io
  names:
    kind: FederatedTypeConfig
    listKind: FederatedTypeConfigList
    plural: federatedtypeconfigs
    shortNames:
    - ftc
    singular: federatedtypeconfig
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FederatedTypeConfig is the Schema for the federatedtypeconfigs
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              autoMigration:
                description: Configurations for auto migration.
                properties:
                  enabled:
                    description: Whether or not to enable auto migration.
                    type: boolean
                required:
                - enabled
                type: object
              controllers:
                description: The controllers that must run before the resource can
                  be propagated to member clusters. Each inner slice specifies a step.
                  Step T must complete before step T+1 can commence. Controllers within
                  each step can execute in parallel.
                items:
                  items:
                    type: string
                  type: array
                type: array
              federatedType:
                description: Configuration for the federated type that defines (via
                  template, placement and overrides fields) how the target type should
                  appear in multiple cluster.
                properties:
                  group:
                    description: Group of the resource.
                    type: string
                  kind:
                    description: Camel-cased singular name of the resource (e.g. ConfigMap)
                    type: string
                  pluralName:
                    description: Lower-cased plural name of the resource (e.g. configmaps).  If
                      not provided, it will be computed by lower-casing the kind and
                      suffixing an 's'.
                    type: string
                  scope:
                    description: Scope of the resource.
                    type: string
                  version:
                    description: Version of the resource.
                    type: string
                required:
                - kind
                - pluralName
                - scope
                - version
                type: object
              pathDefinition:
                description: Defines the paths in the target object schema.
                properties:
                  availableReplicasStatus:
                    description: Path to a numeric field that reflects the number
                      of available replicas that the object currently has. E.g. `status.availableReplicas`
                      for Deployment and ReplicaSet.
                    type: string
                  labelSelector:
                    description: Path to a metav1.LabelSelector field that selects
                      the replicas for this object. E.g. `spec.selector` for Deployment
                      and ReplicaSet.
                    type: string
                  readyReplicasStatus:
                    description: Path to a numeric field that reflects the number
                      of ready replicas that the object currently has. E.g. `status.readyReplicas`
                      for Deployment and ReplicaSet.
                    type: string
                  replicasSpec:
                    description: Path to a numeric field that indicates the number
                      of replicas that an object can be divided into. E.g. `spec.replicas`
                      for Deployment and ReplicaSet.
                    type: string
                  replicasStatus:
                    description: Path to a numeric field that reflects the number
                      of replicas that the object currently has. E.g. `status.replicas`
                      for Deployment and ReplicaSet.
                    type: string
                type: object
              revisionHistory:
                description: Whether or not keep revisionHistory for the federatedType
                  resource
                type: string
              rolloutPlan:
                description: Whether or not to plan the rollout process
                type: string
              sourceType:
                description: The configuration of the source type. If set, each object
                  of the source type will be federated to object of the federated
                  type with the same name and namespace.
                properties:
                  group:
                    description: Group of the resource.
                    type: string
                  kind:
                    description: Camel-cased singular name of the resource (e.g. ConfigMap)
                    type: string
                  pluralName:
                    description: Lower-cased plural name of the resource (e.g. configmaps).  If
                      not provided, it will be computed by lower-casing the kind and
                      suffixing an 's'.
                    type: string
                  scope:
                    description: Scope of the resource.
                    type: string
                  version:
                    description: Version of the resource.
                    type: string
                required:
                - kind
                - pluralName
                - scope
                - version
                type: object
              statusAggregation:
                description: Whether or not Status should be aggregated to source
                  type object
                type: string
              statusCollection:
                description: Whether or not Status object should be populated.
                properties:
                  fields:
                    items:
                      type: string
                    type: array
                type: object
              statusType:
                description: Configuration for the status type that holds information
                  about which type holds the status of the federated resource. If
                  not provided, the group and version will default to those provided
                  for the federated type api resource.
                properties:
                  group:
                    description: Group of the resource.
                    type: string
                  kind:
                    description: Camel-cased singular name of the resource (e.g. ConfigMap)
                    type: string
                  pluralName:
                    description: Lower-cased plural name of the resource (e.g. configmaps).  If
                      not provided, it will be computed by lower-casing the kind and
                      suffixing an 's'.
                    type: string
                  scope:
                    description: Scope of the resource.
                    type: string
                  version:
                    description: Version of the resource.
                    type: string
                required:
                - kind
                - pluralName
                - scope
                - version
                type: object
              targetType:
                description: The configuration of the target type. If not set, the
                  pluralName and groupName fields will be set from the metadata.name
                  of this resource. The kind field must be set.
                properties:
                  group:
                    description: Group of the resource.
                    type: string
                  kind:
                    description: Camel-cased singular name of the resource (e.g. ConfigMap)
                    type: string
                  pluralName:
                    description: Lower-cased plural name of the resource (e.g. configmaps).  If
                      not provided, it will be computed by lower-casing the kind and
                      suffixing an 's'.
                    type: string
                  scope:
                    description: Scope of the resource.
                    type: string
                  version:
                    description: Version of the resource.
                    type: string
                required:
                - kind
                - pluralName
                - scope
                - version
                type: object
            required:
            - federatedType
            - targetType
            type: object
          status:
            description: FederatedTypeConfigStatus defines the observed state of FederatedTypeConfig
            properties:
              observedGeneration:
                description: ObservedGeneration is the generation as observed by the
                  controller consuming the FederatedTypeConfig.
                format: int64
                type: integer
            required:
            - observedGeneration
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

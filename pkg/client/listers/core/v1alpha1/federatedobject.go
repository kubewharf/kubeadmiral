// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kubewharf/kubeadmiral/pkg/apis/core/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FederatedObjectLister helps list FederatedObjects.
// All objects returned here must be treated as read-only.
type FederatedObjectLister interface {
	// List lists all FederatedObjects in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FederatedObject, err error)
	// FederatedObjects returns an object that can list and get FederatedObjects.
	FederatedObjects(namespace string) FederatedObjectNamespaceLister
	FederatedObjectListerExpansion
}

// federatedObjectLister implements the FederatedObjectLister interface.
type federatedObjectLister struct {
	indexer cache.Indexer
}

// NewFederatedObjectLister returns a new FederatedObjectLister.
func NewFederatedObjectLister(indexer cache.Indexer) FederatedObjectLister {
	return &federatedObjectLister{indexer: indexer}
}

// List lists all FederatedObjects in the indexer.
func (s *federatedObjectLister) List(selector labels.Selector) (ret []*v1alpha1.FederatedObject, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FederatedObject))
	})
	return ret, err
}

// FederatedObjects returns an object that can list and get FederatedObjects.
func (s *federatedObjectLister) FederatedObjects(namespace string) FederatedObjectNamespaceLister {
	return federatedObjectNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FederatedObjectNamespaceLister helps list and get FederatedObjects.
// All objects returned here must be treated as read-only.
type FederatedObjectNamespaceLister interface {
	// List lists all FederatedObjects in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FederatedObject, err error)
	// Get retrieves the FederatedObject from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.FederatedObject, error)
	FederatedObjectNamespaceListerExpansion
}

// federatedObjectNamespaceLister implements the FederatedObjectNamespaceLister
// interface.
type federatedObjectNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FederatedObjects in the indexer for a given namespace.
func (s federatedObjectNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FederatedObject, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FederatedObject))
	})
	return ret, err
}

// Get retrieves the FederatedObject from the indexer for a given namespace and name.
func (s federatedObjectNamespaceLister) Get(name string) (*v1alpha1.FederatedObject, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("federatedobject"), name)
	}
	return obj.(*v1alpha1.FederatedObject), nil
}

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/kubewharf/kubeadmiral/pkg/apis/core/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CollectedStatusLister helps list CollectedStatuses.
// All objects returned here must be treated as read-only.
type CollectedStatusLister interface {
	// List lists all CollectedStatuses in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CollectedStatus, err error)
	// CollectedStatuses returns an object that can list and get CollectedStatuses.
	CollectedStatuses(namespace string) CollectedStatusNamespaceLister
	CollectedStatusListerExpansion
}

// collectedStatusLister implements the CollectedStatusLister interface.
type collectedStatusLister struct {
	indexer cache.Indexer
}

// NewCollectedStatusLister returns a new CollectedStatusLister.
func NewCollectedStatusLister(indexer cache.Indexer) CollectedStatusLister {
	return &collectedStatusLister{indexer: indexer}
}

// List lists all CollectedStatuses in the indexer.
func (s *collectedStatusLister) List(selector labels.Selector) (ret []*v1alpha1.CollectedStatus, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CollectedStatus))
	})
	return ret, err
}

// CollectedStatuses returns an object that can list and get CollectedStatuses.
func (s *collectedStatusLister) CollectedStatuses(namespace string) CollectedStatusNamespaceLister {
	return collectedStatusNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CollectedStatusNamespaceLister helps list and get CollectedStatuses.
// All objects returned here must be treated as read-only.
type CollectedStatusNamespaceLister interface {
	// List lists all CollectedStatuses in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CollectedStatus, err error)
	// Get retrieves the CollectedStatus from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CollectedStatus, error)
	CollectedStatusNamespaceListerExpansion
}

// collectedStatusNamespaceLister implements the CollectedStatusNamespaceLister
// interface.
type collectedStatusNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CollectedStatuses in the indexer for a given namespace.
func (s collectedStatusNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CollectedStatus, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CollectedStatus))
	})
	return ret, err
}

// Get retrieves the CollectedStatus from the indexer for a given namespace and name.
func (s collectedStatusNamespaceLister) Get(name string) (*v1alpha1.CollectedStatus, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("collectedstatus"), name)
	}
	return obj.(*v1alpha1.CollectedStatus), nil
}

name: CI

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

# TODO: coverage

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go-version:
          - "1.19"
          - "1.20"
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - run: make test

  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Install Go dependencies
        run: |
          go install github.com/onsi/ginkgo/v2/ginkgo
          go install sigs.k8s.io/kwok/cmd/{kwok,kwokctl}@v0.3.0

      - name: Build cluster
        run: CLUSTER_PROVIDER=kwok make dev-up

      - name: Build images
        run: make images

      - name: Run Kubeadmiral
        run: |
          kwokctl get kubeconfig --name kubeadmiral-host > $HOME/.kube/kubeadmiral/kubeadmiral-host.yaml
          docker create \
            --network host \
            --name kubeadmiral-controller-manager \
            ghcr.io/kubewharf/kubeadmiral-controller-manager:latest \
            /kubeadmiral-controller-manager --kubeconfig=/etc/kubeconfig --klog-v=4 --cluster-join-timeout=1m
          docker cp $HOME/.kube/kubeadmiral/kubeadmiral-host.yaml kubeadmiral-controller-manager:/etc/kubeconfig
          docker start kubeadmiral-controller-manager

      - name: Run tests
        run: KUBECONFIG=$HOME/.kube/kubeadmiral/kubeadmiral-host.yaml EXTRA_GINKGO_FLAGS="-v" make e2e

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version: "1.19"
          # https://github.com/golangci/golangci-lint-action/issues/244
          # without `cache: false`, the action might intermittently fail
          cache: false

      - uses: golangci/golangci-lint-action@v3
        with:
          version: v1.53.3
          only-new-issues: true
          args: >
            --timeout=8m
            --max-issues-per-linter=10
            --max-same-issues=10
            --uniq-by-line=false

  verify-codegen:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version: "1.19"

      - run: |
          make generate -B
          git diff --exit-code && exit 0
          echo "Codegen is not up to date. Please run 'make generate' and commit the changes." >&2
          exit 1

  typos:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: crate-ci/typos@master
        with:
          config: hack/typos.toml

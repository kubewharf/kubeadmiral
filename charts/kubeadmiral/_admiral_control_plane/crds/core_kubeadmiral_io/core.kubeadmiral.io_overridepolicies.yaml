---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
    kubeadmiral.io/no-federated-resource: "true"
  creationTimestamp: null
  name: overridepolicies.core.kubeadmiral.io
spec:
  group: core.kubeadmiral.io
  names:
    kind: OverridePolicy
    listKind: OverridePolicyList
    plural: overridepolicies
    shortNames:
      - op
    singular: overridepolicy
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: OverridePolicy describes the override rules for a resource.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                overrideRules:
                  description: OverrideRules specify the override rules. Each rule specifies the overriders and the clusters these overriders should be applied to.
                  items:
                    properties:
                      overriders:
                        description: Overriders specify the overriders to be applied in the target clusters.
                        properties:
                          annotations:
                            description: Annotation specifies overriders that apply to the resource annotations.
                            items:
                              description: StringMapOverrider represents the rules dedicated to handling resource labels/annotations
                              properties:
                                operator:
                                  description: Operator specifies the operation. If omitted, defaults to "overwrite".
                                  enum:
                                    - addIfAbsent
                                    - overwrite
                                    - delete
                                  type: string
                                value:
                                  additionalProperties:
                                    type: string
                                  description: Value is the value(s) that will be applied to annotations/labels of resource. If Operator is 'addIfAbsent', items in Value (empty is not allowed) will be added in annotations/labels. - For 'addIfAbsent' Operator, the keys in Value cannot conflict with annotations/labels. If Operator is 'overwrite', items in Value which match in annotations/labels will be replaced. If Operator is 'delete', items in Value which match in annotations/labels will be deleted.
                                  type: object
                              required:
                                - value
                              type: object
                            type: array
                          args:
                            description: Args specifies overriders that apply to the container arguments.
                            items:
                              properties:
                                containerName:
                                  description: ContainerName targets the specified container or init container in the pod template.
                                  type: string
                                operator:
                                  description: Operator specifies the operation. If omitted, defaults to "overwrite".
                                  enum:
                                    - append
                                    - overwrite
                                    - delete
                                  type: string
                                value:
                                  description: Value is the value(s) that will be applied to command/args of ContainerName. If Operator is 'append', items in Value (empty is not allowed) will be appended to command/args. If Operator is 'overwrite', current command/args of ContainerName will be completely replaced by Value. If Operator is 'delete', items in Value that match in command/args will be deleted.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - containerName
                                - value
                              type: object
                            type: array
                          command:
                            description: Command specifies overriders that apply to the container commands.
                            items:
                              properties:
                                containerName:
                                  description: ContainerName targets the specified container or init container in the pod template.
                                  type: string
                                operator:
                                  description: Operator specifies the operation. If omitted, defaults to "overwrite".
                                  enum:
                                    - append
                                    - overwrite
                                    - delete
                                  type: string
                                value:
                                  description: Value is the value(s) that will be applied to command/args of ContainerName. If Operator is 'append', items in Value (empty is not allowed) will be appended to command/args. If Operator is 'overwrite', current command/args of ContainerName will be completely replaced by Value. If Operator is 'delete', items in Value that match in command/args will be deleted.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - containerName
                                - value
                              type: object
                            type: array
                          envs:
                            description: Envs specifies overriders that apply to the container envs.
                            items:
                              properties:
                                containerName:
                                  description: ContainerName targets the specified container or init container in the pod template.
                                  type: string
                                operator:
                                  description: Operator specifies the operation. If omitted, defaults to "overwrite".
                                  enum:
                                    - addIfAbsent
                                    - overwrite
                                    - delete
                                  type: string
                                value:
                                  description: List of environment variables to set in the container.
                                  items:
                                    description: EnvVar represents an environment variable present in a Container.
                                    properties:
                                      name:
                                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                                        type: string
                                      value:
                                        description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                        type: string
                                      valueFrom:
                                        description: Source for the environment variable's value. Cannot be used if value is not empty.
                                        properties:
                                          configMapKeyRef:
                                            description: Selects a key of a ConfigMap.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap or its key must be defined
                                                type: boolean
                                            required:
                                              - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          fieldRef:
                                            description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to select in the specified API version.
                                                type: string
                                            required:
                                              - fieldPath
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          resourceFieldRef:
                                            description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                            properties:
                                              containerName:
                                                description: 'Container name: required for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: Specifies the output format of the exposed resources, defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to select'
                                                type: string
                                            required:
                                              - resource
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          secretKeyRef:
                                            description: Selects a key of a secret in the pod's namespace
                                            properties:
                                              key:
                                                description: The key of the secret to select from.  Must be a valid secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret or its key must be defined
                                                type: boolean
                                            required:
                                              - key
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                    required:
                                      - name
                                    type: object
                                  type: array
                              required:
                                - containerName
                                - value
                              type: object
                            type: array
                          image:
                            description: Image specifies the overriders that apply to the image.
                            items:
                              properties:
                                containerNames:
                                  description: ContainerNames are ignored when ImagePath is set. If empty, the image override rule applies to all containers. Otherwise, this override targets the specified container(s) or init container(s) in the pod template.
                                  items:
                                    type: string
                                  type: array
                                imagePath:
                                  description: "ImagePath indicates the image path to target. For Example: /spec/template/spec/containers/0/image \n If empty, the system will automatically resolve the image path if the resource type is Pod, CronJob, Deployment, StatefulSet, DaemonSet or Job."
                                  type: string
                                operations:
                                  description: Operations are the specific operations to be performed on ContainerNames or ImagePath.
                                  items:
                                    properties:
                                      imageComponent:
                                        description: ImageComponent is the part of the image to override.
                                        enum:
                                          - Registry
                                          - Repository
                                          - Tag
                                          - Digest
                                        type: string
                                      operator:
                                        description: Operator specifies the operation. If omitted, defaults to "overwrite".
                                        enum:
                                          - addIfAbsent
                                          - overwrite
                                          - delete
                                        type: string
                                      value:
                                        description: Value is the value required by the operation. For 'addIfAbsent' Operator, the old value of ImageComponent should be empty, and the Value shouldn't be empty.
                                        type: string
                                    required:
                                      - imageComponent
                                    type: object
                                  type: array
                              required:
                                - operations
                              type: object
                            type: array
                          jsonpatch:
                            description: JsonPatch specifies overriders in a syntax similar to RFC6902 JSON Patch.
                            items:
                              properties:
                                operator:
                                  description: Operator specifies the operation. If omitted, defaults to "replace".
                                  type: string
                                path:
                                  description: Path is a JSON pointer (RFC 6901) specifying the location within the resource document where the operation is performed. Each key in the path should be prefixed with "/", while "~" and "/" should be escaped as "~0" and "~1" respectively. For example, to add a label "kubeadmiral.io/label", the path should be "/metadata/labels/kubeadmiral.io~1label".
                                  type: string
                                value:
                                  description: Value is the value(s) required by the operation.
                                  x-kubernetes-preserve-unknown-fields: true
                              required:
                                - path
                              type: object
                            type: array
                          labels:
                            description: Label specifies overriders that apply to the resource labels.
                            items:
                              description: StringMapOverrider represents the rules dedicated to handling resource labels/annotations
                              properties:
                                operator:
                                  description: Operator specifies the operation. If omitted, defaults to "overwrite".
                                  enum:
                                    - addIfAbsent
                                    - overwrite
                                    - delete
                                  type: string
                                value:
                                  additionalProperties:
                                    type: string
                                  description: Value is the value(s) that will be applied to annotations/labels of resource. If Operator is 'addIfAbsent', items in Value (empty is not allowed) will be added in annotations/labels. - For 'addIfAbsent' Operator, the keys in Value cannot conflict with annotations/labels. If Operator is 'overwrite', items in Value which match in annotations/labels will be replaced. If Operator is 'delete', items in Value which match in annotations/labels will be deleted.
                                  type: object
                              required:
                                - value
                              type: object
                            type: array
                        type: object
                      targetClusters:
                        description: TargetClusters selects the clusters in which the overriders in this rule should be applied. If multiple types of selectors are specified, the overall result is the intersection of all of them.
                        properties:
                          clusterAffinity:
                            description: ClusterAffinity selects FederatedClusters by matching their labels and fields against expressions. If multiple terms are specified, their results are ORed.
                            items:
                              properties:
                                matchExpressions:
                                  description: A list of cluster selector requirements by cluster labels.
                                  items:
                                    description: ClusterSelectorRequirement is a selector that contains values, a key, and an operator that relates the values and keys
                                    properties:
                                      key:
                                        type: string
                                      operator:
                                        description: ClusterSelectorOperator is the set of operators that can be used in a cluster selector requirement.
                                        enum:
                                          - In
                                          - NotIn
                                          - Exists
                                          - DoesNotExist
                                          - Gt
                                          - Lt
                                        type: string
                                      values:
                                        items:
                                          type: string
                                        type: array
                                    required:
                                      - key
                                      - operator
                                      - values
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of cluster selector requirements by cluster fields.
                                  items:
                                    description: ClusterSelectorRequirement is a selector that contains values, a key, and an operator that relates the values and keys
                                    properties:
                                      key:
                                        type: string
                                      operator:
                                        description: ClusterSelectorOperator is the set of operators that can be used in a cluster selector requirement.
                                        enum:
                                          - In
                                          - NotIn
                                          - Exists
                                          - DoesNotExist
                                          - Gt
                                          - Lt
                                        type: string
                                      values:
                                        items:
                                          type: string
                                        type: array
                                    required:
                                      - key
                                      - operator
                                      - values
                                    type: object
                                  type: array
                              type: object
                            type: array
                          clusterSelector:
                            additionalProperties:
                              type: string
                            description: ClusterSelector selects FederatedClusters by their labels. Empty labels selects all FederatedClusters.
                            type: object
                          clusters:
                            description: Clusters selects FederatedClusters by their names. Empty Clusters selects all FederatedClusters.
                            items:
                              type: string
                            type: array
                        type: object
                    type: object
                  type: array
              type: object
            status:
              properties:
                refCount:
                  format: int64
                  minimum: 0
                  type: integer
                typedRefCount:
                  items:
                    properties:
                      count:
                        format: int64
                        minimum: 0
                        type: integer
                      group:
                        type: string
                      resource:
                        type: string
                    required:
                      - count
                      - resource
                    type: object
                  type: array
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
